{"version":3,"sources":["../../../../server/api/post/post.controller.js"],"names":[],"mappings":"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","file":"post.controller.js","sourcesContent":["/**\r\n * Using Rails-like standard naming convention for endpoints.\r\n * GET     /api/posts              ->  index\r\n * POST    /api/posts              ->  create\r\n * GET     /api/posts/:id          ->  show\r\n * PUT     /api/posts/:id          ->  update\r\n * DELETE  /api/posts/:id          ->  destroy\r\n */\r\n\r\n 'use strict';\r\n\r\n import _ from 'lodash';\r\n import Image from '../image/image.model';\r\n import Post from './post.model';\r\n import config from '../../config/environment';\r\n var crypto = require('crypto'),\r\n http = require('http'),\r\n formidable = require('formidable'),\r\n fs = require('fs'),\r\n path = require('path');\r\n\r\n\r\n function respondWithResult(res, statusCode) {\r\n  statusCode = statusCode || 200;\r\n  return function(entity) {\r\n    if (entity) {\r\n      res.status(statusCode).json(entity);\r\n    }\r\n  };\r\n}\r\n\r\nfunction saveUpdates(updates) {\r\n  return function(entity) {\r\n    var updated = _.merge(entity, updates);\r\n    return updated.save()\r\n    .then(updated => {\r\n      return updated;\r\n    });\r\n  };\r\n}\r\n\r\nfunction removeEntity(res) {\r\n  return function(entity) {\r\n    if (entity) {\r\n      return entity.remove()\r\n      .then(() => {\r\n        res.status(204).end();\r\n      });\r\n    }\r\n  };\r\n}\r\n\r\nfunction handleEntityNotFound(res) {\r\n  return function(entity) {\r\n    if (!entity) {\r\n      res.status(404).end();\r\n      return null;\r\n    }\r\n    return entity;\r\n  };\r\n}\r\n\r\nfunction handleError(res, statusCode) {\r\n  statusCode = statusCode || 500;\r\n  return function(err) {\r\n    res.status(statusCode).send(err);\r\n  };\r\n}\r\n\r\n// Gets a list of Posts\r\nexport function index(req, res) {\r\n  return Post.find().exec()\r\n  .then(respondWithResult(res))\r\n  .catch(handleError(res));\r\n}\r\n\r\n// Gets a single Post from the DB\r\nexport function show(req, res) {\r\n  return Post.findById(req.params.id).exec()\r\n  .then(handleEntityNotFound(res))\r\n  .then(respondWithResult(res))\r\n  .catch(handleError(res));\r\n}\r\n\r\n// Creates a new Post in the DB\r\nexport function create(req, res) {\r\n\r\n  var form = new formidable.IncomingForm();\r\n  form.parse(req, function(err, fields, files) {\r\n\r\n\r\n    var date = fields.dateTaken.toString().replace(/:/, \"-\"); // moche mais pas le temps pour une expr- reguli√®re\r\n    var dateTaken = date.replace(/:/, \"-\");\r\n    var old_path = files.file.path\r\n    var newImage = new Image;\r\n    newImage.img.data = fs.readFileSync(old_path);\r\n    newImage.img.contentType = 'image/png';\r\n    newImage.save(function (err, imageSaved) {\r\n      if (err) console.log(err);\r\n\r\n      console.log(imageSaved);\r\n\r\n         var newPost = {\r\n        type: 'Feature',\r\n        active: true,\r\n        properties: {\r\n          user: \"57a2ac6cb4914f5818dc05c5\",\r\n          message: fields.message,\r\n          image:[],\r\n          title:fields.title,\r\n          subTitle:fields.subTitle,\r\n          dateTaken:dateTaken\r\n        },\r\n        geometry: {\r\n          coordinates: [],\r\n          type: \"Point\"\r\n        }\r\n      };  \r\n      newPost.geometry.coordinates.push(fields.lat);\r\n      newPost.geometry.coordinates.push(fields.lng);\r\n      newPost.properties.image.push(imageSaved._id);\r\n\r\n      //console.log(newPost);\r\n\r\n      return Post.create(newPost)\r\n      .then(respondWithResult(res, 201))\r\n      .catch(handleError(res));\r\n    })\r\n\r\n  });\r\n  \r\n}\r\n\r\n// Updates an existing Post in the DB\r\nexport function update(req, res) {\r\n  if (req.body._id) {\r\n    delete req.body._id;\r\n  }\r\n  return Post.findById(req.params.id).exec()\r\n  .then(handleEntityNotFound(res))\r\n  .then(saveUpdates(req.body))\r\n  .then(respondWithResult(res))\r\n  .catch(handleError(res));\r\n}\r\n\r\n// Deletes a Post from the DB\r\nexport function destroy(req, res) {\r\n  return Post.findById(req.params.id).exec()\r\n  .then(handleEntityNotFound(res))\r\n  .then(removeEntity(res))\r\n  .catch(handleError(res));\r\n}"]}